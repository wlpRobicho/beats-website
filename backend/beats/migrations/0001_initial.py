# Generated by Django 5.2.1 on 2025-05-25 01:47

import beats.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Beat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name of the beat', max_length=255)),
                ('key', models.CharField(choices=[('Am', 'A minor'), ('A', 'A major'), ('A#', 'A# major'), ('A#m', 'A# minor'), ('B', 'B major'), ('Bm', 'B minor'), ('C', 'C major'), ('Cm', 'C minor'), ('C#', 'C# major'), ('C#m', 'C# minor'), ('D', 'D major'), ('Dm', 'D minor'), ('D#', 'D# major'), ('D#m', 'D# minor'), ('E', 'E major'), ('Em', 'E minor'), ('F', 'F major'), ('Fm', 'F minor'), ('F#', 'F# major'), ('F#m', 'F# minor'), ('G', 'G major'), ('Gm', 'G minor'), ('G#', 'G# major'), ('G#m', 'G# minor')], help_text='Choose the musical key', max_length=10)),
                ('bpm', models.PositiveIntegerField(help_text='Tempo (beats per minute)')),
                ('genre', models.CharField(choices=[('autre', 'Other'), ('chill', 'Chill'), ('classical', 'Classical'), ('cloud_trap', 'Cloud Trap'), ('country', 'Country'), ('dance_edm', 'Dance & EDM'), ('dancehall', 'Dancehall'), ('deep_house', 'Deep House'), ('disco', 'Disco'), ('drill', 'Drill'), ('drum_bass', 'Drum & Bass'), ('dubstep', 'Dubstep'), ('electro', 'Electro'), ('folk', 'Folk'), ('hiphop', 'Hip-Hop'), ('hood_trap', 'Hood Trap'), ('house', 'House'), ('indie', 'Indie'), ('infected', 'Infected'), ('jazz_blues', 'Jazz & Blues'), ('jersey', 'Jersey'), ('video_game', 'Video Game'), ('latin', 'Latin'), ('love_rap', 'Love Rap'), ('love_trap', 'Love Trap'), ('metal', 'Metal'), ('movie_music', 'Movie Soundtrack'), ('new_wave', 'New Wave'), ('old_school', 'Old School'), ('phonk', 'Phonk'), ('piano', 'Piano'), ('pop', 'Pop'), ('rnb_soul', 'R&B & Soul'), ('rap', 'Rap'), ('reggae', 'Reggae'), ('reggaeton', 'Reggaeton'), ('rock', 'Rock'), ('alt_rock', 'Alternative Rock'), ('techno', 'Techno'), ('trance', 'Trance'), ('trap', 'Trap'), ('triphop', 'Triphop'), ('west_coast', 'West Coast'), ('world', 'World')], help_text='Choose the genre', max_length=50)),
                ('cover_image', models.ImageField(upload_to='covers/')),
                ('audio_file', models.FileField(upload_to='protected/beats/', validators=[beats.models.validate_audio_file])),
                ('duration', models.DurationField(blank=True, help_text='Length of the beat', null=True)),
                ('tags', models.CharField(help_text="Comma-separated tags like 'dark,trap,melodic'", max_length=255)),
                ('youtube_link', models.URLField(blank=True, help_text='Optional YouTube promo link', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=True)),
                ('play_count', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('allow_download', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='published', help_text="Select 'draft' to hide this beat from public until finished", max_length=10)),
                ('is_active', models.BooleanField(default=True, help_text='Uncheck to hide this beat without deleting it')),
                ('is_featured', models.BooleanField(default=False, help_text='Highlight this beat on top of the homepage or featured section')),
            ],
            options={
                'verbose_name': 'Beat',
                'verbose_name_plural': 'Beats',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['slug'], name='beats_beat_slug_ec721b_idx'), models.Index(fields=['genre'], name='beats_beat_genre_d957cb_idx'), models.Index(fields=['key'], name='beats_beat_key_abb0ab_idx')],
            },
        ),
        migrations.CreateModel(
            name='BeatComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('beat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='beats.beat')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BeatLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('beat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='beats.beat')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('beat', 'ip_address')},
            },
        ),
    ]
